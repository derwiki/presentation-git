<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title Using git effectively | Adam Derewecki
    %meta{:content => "Adam Derewecki", :name => "author"}/
    %link{:href => "http://fonts.googleapis.com/css?family=Montserrat:400,700", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "reveal/css/reset.css", :rel => "stylesheet"}/
    %link{:href => "reveal/css/main.css", :rel => "stylesheet"}/
    %link{:href => "highlight/src/styles/solarized_dark.css", :rel => "stylesheet"}/
    %link{:href => "presentation.css", :rel => "stylesheet"}/
    / overrides for default reveal styles
    :css
      .reveal pre,
      .reveal code {
        font-size: 18px;
      }
  %body#presentation
    .reveal
      .slides

        %section
          %h2 Using git effectiely 
          %h4
            %a{ href: '//github.com/derwiki/presentation-git' }
              github.com/derwiki/presentation-git
          %br
          %h5 presented by
          %h4 @derwiki
          %h4
          %h4 for AdRoll, March 31, 2015

        %section
          %h2 What is git?
          %ul
            %li.fragment
              Version control system like SVN, CVS, RCS, mercurial, etc
            %li.fragment
              File systems keep track of directories, files, and contents
            %li.fragment
              File systems only car about the current state
            %li.fragment
              Installing git to part of a filesystem and creating "savepoints"
              (commits) allows you to easily navigate between different states
              the filesystem has been in

        %section
          %h2 Controlling git
          %ul
            %li.fragment
              There are only 156 commands (
              %code git help --all
              \)
              
            %li.fragment
              .git-col
                %p add
                %p add--interactive
                %p am
                %p annotate
                %p apply
                %p archimport
                %p archive
                %p bisect
                %p bisect--helper
                %p blame
                %p branch
                %p bundle
                %p cat-file
                %p check-attr
                %p check-ignore
                %p check-mailmap
                %p check-ref-format
                %p checkout
                %p checkout-index
                %p cherry
                %p cherry-pick
                %p citool
                %p clean
                %p clone
                %p column
                %p commit
                %p commit-tree
                %p config
                %p count-objects
                %p credential
                %p credential-cache
                %p credential-cache--daemon
                %p credential-osxkeychain
                %p credential-store
                %p cvsexportcommit
                %p cvsimport
                %p cvsserver
                %p daemon
                %p describe
                %p diff
                %p diff-files
                %p diff-index
                %p diff-tree
                %p difftool
                %p difftool--helper
                %p fast-export
                %p fast-import
                %p fetch
                %p fetch-pack
                %p filter-branch
                %p fmt-merge-msg
                %p for-each-ref
                %p format-patch
                %p fsck
                %p fsck-objects
                %p gc
                %p get-tar-commit-id
                %p grep
                %p gui
                %p gui--askpass
                %p hash-object
                %p help
                %p http-backend
                %p http-fetch
                %p http-push
                %p imap-send
                %p index-pack
                %p init
                %p init-db
                %p instaweb
                %p log
                %p ls-files
                %p ls-remote
                %p ls-tree
                %p mailinfo
                %p mailsplit
                %p merge
                %p merge-base
                %p merge-file
                %p merge-index
                %p merge-octopus
                %p merge-one-file
                %p merge-ours
                %p merge-recursive
                %p merge-resolve
                %p merge-subtree
                %p merge-tree
                %p mergetool
                %p mktag
                %p mktree
                %p mv
                %p name-rev
                %p notes
                %p p4
                %p pack-objects
                %p pack-redundant
                %p pack-refs
                %p patch-id
                %p prune
                %p prune-packed
                %p pull
                %p push
                %p quiltimport
                %p read-tree
                %p rebase
                %p receive-pack
                %p reflog
                %p relink
                %p remote
                %p remote-ext
                %p remote-fd
                %p remote-ftp
                %p remote-ftps
                %p remote-http
                %p remote-https
                %p remote-testsvn
                %p repack
                %p replace
                %p request-pull
                %p rerere
                %p reset
                %p rev-list
                %p rev-parse
                %p revert
                %p rm
                %p send-email
                %p send-pack
                %p sh-i18n--envsubst
                %p shell
                %p shortlog
                %p show
                %p show-branch
                %p show-index
                %p show-ref
                %p stage
                %p stash
                %p status
                %p stripspace
                %p submodule
                %p subtree
                %p svn
                %p symbolic-ref
                %p tag
                %p unpack-file
                %p unpack-objects
                %p update-index
                %p update-ref
                %p update-server-info
                %p upload-archive
                %p upload-pack
                %p var
                %p verify-pack
                %p verify-tag
                %p web--browse
                %p whatchanged
                %p write-tree

            %li.fragment
              We're going to cover them
              %b all
            %li.fragment
              \~20 seconds per command, so let's dive in

        %section
          %h2 Controlling git
          %ul
            %li .. not really
            %li.fragment
              Focusing on ~11 commands
            %li.fragment
              Emphasis on collaborating with a team

        %section
          %h2 Installing git to a directory
          %ul
            %li.fragment
              %code git init
            %li.fragment
              Creates a
              %code .git
              directory in your directory alongside everything else that was
              there
            %li.fragment
              %code .git
              contains: the object model, database of the object model, and
              other project configurations

        %section
          %h2
            %code $ tree .git/
          %code
            %pre
              .git
              ├── COMMIT_EDITMSG
              ├── HEAD
              ├── config
              ├── description
              ├── hooks
              │   ├── pre-commit
              ├── index
              ├── info
              │   └── exclude
              ├── logs
              │   ├── HEAD
              │   └── refs
              │       └── heads
              │           ├── adam-style-index
              │           └── master
              ├── objects
              │   ├── 01
              │   │   └── ef3e6630af133b41bd954e220f31231aa281d9

        %section
          %h2 Objects: blobs and trees
          %ul
            %li.fragment
              %b blob:
              contents of a file
            %li.fragment
              %b tree:
              record of a directory in a specific state
            %li.fragment
              i.e. list of blobs and trees in the current tree
          .fragment
            %code
              %pre
                $ git ls-tree HEAD
                100644 blob 050c9d95c7e2ec43e92b19e6719ab522f580a2a8  .gitignore
                100644 blob 45e30c639e2eb1c93ee7ca8eb89b120dc6d46391  Gemfile
                100644 blob 6136bceb0bbe82b4f5786e003c1e6e5a9fa9d976  Gemfile.lock
                100644 blob dd4e97e22e159a585b20e21028f964827d5afa4e  README.rdoc
                100644 blob ba6b733dd2358d858f00445ebd91c214f0f5d2e5  Rakefile
                040000 tree 9149e8d1f244078f92a48197be0ea0e89feb1df3  app
                040000 tree 19b9d6c8a39c3ecc9e985b34af88ab219e07df75  bin
                100644 blob bd83b25412305f93fdb0a892aded30e5178899ba  config.ru
                040000 tree 395350c15f688e10ef8115eaf609fcfafcf51bea  config
                040000 tree 602980f52d9fe985bf9f9ec25c77513b51a42d52  db
                040000 tree 07d89d0b7e50929dea0dcf7e7354358c1133be86  lib
                040000 tree 29a422c19251aeaeb907175e9b3219a9bed6c616  log
                040000 tree 23a3236904020a96c2a827875e3e065213747cda  public
                040000 tree 03fb84ec8cc53685767345fd32d53af59762c622  test
                040000 tree 8084e8e04d510cc28321f30a9646477cc50c235c  vendor

        %section
          %code
            %pre
              $ git show 050c9d95 # the SHA1 of .gitignore's blob
              \# See https://help.github.com/articles/ignoring-files for more
              \#
              \# If you find yourself ignoring temporary files generated by
              \# or operating system, you probably want to add a global ignore
              \#   git config --global core.excludesfile '~/.gitignore_global'
              \# Ignore bundler config.
              \/.bundle
              \# Ignore the default SQLite database.
              \/db/*.sqlite3
              \/db/*.sqlite3-journal
              \# Ignore all logfiles and tempfiles.
              \/log/*
              \!/log/.keep
              \/tmp

        %section
          %h2 Objects: commits
          %ul
            %li.fragment
              %b commit:
              attached to a tree (which is a snapshot of a directory in it's
              current state)
            %li.fragment
              Contains metadata: author, when the tree was modified, commit
              message, etc
            %li.fragment
              %b Only
              contains information about the current commit
            %li.fragment
              i.e. how the tree differs from the previous version
            %li.fragment
              Commits contain references to their
              %b parents commit(s)
            %li.fragment
              You can traverse up parent commits if you need information prior
              to the current commit
              
        %section
          %h2 Family tree
          %img{ src: 'assets/git-ancestry.jpg' }

        %section
          %h2 Raw commit
          %code
            %pre
              $ git show --format=raw
              commit 67ee28dcc27ee5ab59061ae47a0b81dd19888274
              %b tree e7dd337b5f247393f9f23e03eef3a176eb32e1a1
              %b parent 78e5e7abdb69d32f886e950b3329fdc0c249f6dd
              author Adam Derewecki <derewecki@gmail.com> 1427591530 -0700
              committer Adam Derewecki <derewecki@gmail.com> 1427591530 -0700

              \    Initial db/schema.rb

              diff --git a/db/schema.rb b/db/schema.rb
              new file mode 100644
              index 0000000..9affc04
              \--- /dev/null
              \+++ b/db/schema.rb
              \@@ -0,0 +1,24 @@
              \+# encoding: UTF-8
              \+# This file is auto-generated from the current state of the
              \+# of editing this file, please use the migrations feature of
              \+# incrementally modify your database, and then regenerate

        %section
          %h2 SHA-1 hashes
          %ul
            %li.fragment
              Hashing algorithm used to identify all objects
            %li.fragment
              blob: changing the file contents changes SHA-1
            %li.fragment
              tree: adding/removing a subtree, changing a blob changes SHA-1
            %li.fragment
              commit: changing blob, tree, or commit metadata changes SHA-1

        %section
          %h2 Raw commit
          %code
            %pre{ style: 'font-size: 14px;' }
              \          $ git show --format=raw | head -n 7
              %br
              commit 67ee28dcc27ee5ab59061ae47a0b81dd19888274
              tree e7dd337b5f247393f9f23e03eef3a176eb32e1a1
              parent 78e5e7abdb69d32f886e950b3329fdc0c249f6dd
              author Adam Derewecki <derewecki@gmail.com> 1427591530 -0700
              committer Adam Derewecki <derewecki@gmail.com> 1427591530 -0700
              \    Initial db/schema.rb
              %br
              Adams-MacBook-Pro-2:~/src/TwitterClone[adam/style-index *%]
              \$ git commit --amend -m "Initial db/schema.rb (revised)"
              %br
              \[adam/style-index b7eabfc] Initial db/schema.rb (revised)
              \ Date: Sat Mar 28 18:12:10 2015 -0700
              \ 1 file changed, 24 insertions(+)
              \ create mode 100644 db/schema.rb
              %br
              Adams-MacBook-Pro-2:~/src/TwitterClone[adam/style-index *%]
              \$ git show --format=raw | head -n 7
              %br
              commit b7eabfc8b46f259eee072cb6c79595452b72331b
              tree e7dd337b5f247393f9f23e03eef3a176eb32e1a1
              parent 78e5e7abdb69d32f886e950b3329fdc0c249f6dd
              author Adam Derewecki <derewecki@gmail.com> 1427591530 -0700
              committer Adam Derewecki <derewecki@gmail.com> 1427610295 -0700
              \    Initial db/schema.rb (revised)

        %section
          %h2 URL Structure
          %ul
            %li.fragment
              Like title and h1 tags, URL tokens imply hints about content
            %li.fragment
              Use semantic naming when possible
            %li.fragment
              bad: '/gear/15'
            %li.fragment
              good: '/gear/canon-5d-mark-ii'
            %li.fragment
              BEST: '/rent/canon-5d-mark-ii/san-francisco/nob-hill'
            %li.fragment
              The practice of adding "slugs" to URLs is very common
            %li.fragment
              Additional benefit: obfuscates auto-increment IDs

        %section
          %h2 Long Tail:
          %h3 Landing pages
          %ul
            %li.fragment
              Your home page is only one entry point to your site
            %li.fragment
              How many variations do people search for? Can you generate them?
            %li.fragment
              e.g. you list apartments in San Francisco
            %li.fragment
              People will search for "apartments in san francisco", "rent in
              pacific heights", "rent 94103", etc
            %li.fragment
              You have this data, it should be exposed in a way that
              corresponds to what people are searching for
            %li.fragment
              Each landing pages may only get 5 hits/day, but if you have
              thousands that rank, it adds up

        %section
          %h2 Long Tail:
          %h3 Content Marketing
          %ul
            %li.fragment
              Many attainable keyword phrases aren't completely on-topic
            %li.fragment
              Putting them on main site could be confusing
            %li.fragment
              Blogs are perfect for these random, high traffic topics
            %li.fragment
              Make sure to upsell the main site, else it's low-value traffic

        %section
          %h2 Landing Pages and Conversion
          %ul
            %li.fragment
              It's more than just the title/h1;
              landing pages convert better if the content speaks to that market
            %li.fragment
              e.g. /rent/drones contains information for first time drone flyers
            %li.fragment
              e.g. /wedding shows wedding photographers the benefits of renting
              an extra camera
            %li.fragment
              This strategy is also important for paid advertising / marketing
            %li.fragment
              i.e. "List your camera and earn money" ads shouldn't point to
              the homepage, they should point to "/list_your_gear" landing page

        %section
          %h2 Instructing Googlebot
          %ul
            %li.fragment
              sitemap.xml (or collection of sitemaps)
            %li.fragment
              robots.txt for allow/disallow
            %li.fragment
              Why would you disallow?
            %li.fragment
              If you have 100,000 pages but only 50 entry points, you want
              "link juice" concentrated more in the entry points
            %li.fragment
              nofollow / robots.txt disallow will prevent Google from indexing
              low-SEO-value pages or pages that you never want GoogleBot to see
            %li.fragment
              e.g. maybe you don't want to expose all profiles in San
              Francisco, but rather bring everyone in to an SF landing page
              with highlighted profiles

        %section
          %h2 Good Web Practices
          %ul
            %li.fragment
              SEO has a bad rap
            %li.fragment
              Really, it's encouraging good and sane web development practices
            %li.fragment
              Try writing a script that extracts title, h1, and URL for your 50
              top-viewed web pages
            %li.fragment
              Mine was embarassing :)
            %li.fragment
              Really easy to fix, pays for itself over time in free traffic

        %section
          %h2 Backlinks: why should we trust you?
          %ul
            %li.fragment
              Every search engine sucked in the 90s
            %li.fragment
              Google got it right with PageRank
            %li.fragment
              The more web sites that link to you, the higher your
              authority
            %li.fragment
              If web sites link to you for a specific phrase, i.e. 'camera
              rental', then you have higher authority for that phrase
            %li.fragment
              The higher the authority of the domain with the link to you,
              the more weight it carries
            %li.fragment
              One "good" backlink (30+ CF) is better than hundreds of low CF
              scores

        %section
          %img{ src: 'assets/market-samurai-citation-flow.jpg', style: 'width: 100%;' }

        %section
          %img{ src: 'assets/network-advertising.jpg', style: 'width: 100%;' }

        %section
          %h2 Basic SEO
          %h4
            %a{ href: '//github.com/derwiki/presentation-seo' }
              github.com/derwiki/presentation-seo
          %br
          %h5 presented by
          %h4 @derwiki
          %h4 for AdRoll, March 24, 2015
          %h4 My affiliate link: marketsamurai.com/c/derwiki

      /
        required for correct operation of reveal.js,
        even if we don't want controls
      %aside.controls
        %a.left{:href => "#"} &#x25c4;
        %a.right{:href => "#"} &#x25ba;
        %a.up{:href => "#"} &#x25b2;
        %a.down{:href => "#"} &#x25bc;

    %script{:src => "reveal/js/reveal.min.js"}
    %script{:src => "highlight/build/highlight.pack.js"}
    :javascript
      Reveal.initialize({
        controls: false,
        progress: false,
        history: true,
        mouseWheel: false,
        rollingLinks: false,
      });
      hljs.initHighlightingOnLoad();
